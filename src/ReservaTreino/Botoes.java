/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ReservaTreino;

import ImplementadoNoEclipse.Elemento;
import ImplementadoNoEclipse.No;

/**
 *
 * @author borges.esb
 */
public class Botoes extends javax.swing.JFrame {

    No noArvore = new No();
    
    Elemento elem = new Elemento();

    /**
     * Creates new form Arvore
     */
    public Botoes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PainelBotoes = new javax.swing.JPanel();
        BotaoImprimirPos = new javax.swing.JButton();
        BotaoImprimirOrdInv = new javax.swing.JButton();
        BotaoRemover = new javax.swing.JButton();
        BotaoImprimirEmOrd = new javax.swing.JButton();
        BotaoInserir = new javax.swing.JButton();
        BotaoImprimirPre = new javax.swing.JButton();
        BotaoBuscar = new javax.swing.JButton();
        BotaoSair = new javax.swing.JButton();
        Operadores = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BotaoImprimirPos.setText("Imprimir Pós-Ordem");
        BotaoImprimirPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoImprimirPosActionPerformed(evt);
            }
        });

        BotaoImprimirOrdInv.setText("Imprimir Em-Ordem Inversa");
        BotaoImprimirOrdInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoImprimirOrdInvActionPerformed(evt);
            }
        });

        BotaoRemover.setText("Remover");
        BotaoRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoRemoverActionPerformed(evt);
            }
        });

        BotaoImprimirEmOrd.setText("Imprimir Em-Ordem");
        BotaoImprimirEmOrd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoImprimirEmOrdActionPerformed(evt);
            }
        });

        BotaoInserir.setText("Inserir");
        BotaoInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoInserirActionPerformed(evt);
            }
        });

        BotaoImprimirPre.setText("Imprimir Pré-Ordem");
        BotaoImprimirPre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoImprimirPreActionPerformed(evt);
            }
        });

        BotaoBuscar.setText("Buscar");
        BotaoBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoBuscarActionPerformed(evt);
            }
        });

        BotaoSair.setText("Sair");
        BotaoSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelBotoesLayout = new javax.swing.GroupLayout(PainelBotoes);
        PainelBotoes.setLayout(PainelBotoesLayout);
        PainelBotoesLayout.setHorizontalGroup(
            PainelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PainelBotoesLayout.createSequentialGroup()
                        .addComponent(BotaoInserir)
                        .addGap(48, 48, 48)
                        .addComponent(BotaoBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(BotaoRemover)
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PainelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(BotaoSair)
                        .addGroup(PainelBotoesLayout.createSequentialGroup()
                            .addGroup(PainelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(BotaoImprimirPos)
                                .addComponent(BotaoImprimirPre))
                            .addGap(18, 18, 18)
                            .addGroup(PainelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(BotaoImprimirEmOrd)
                                .addComponent(BotaoImprimirOrdInv)))))
                .addContainerGap())
        );
        PainelBotoesLayout.setVerticalGroup(
            PainelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoInserir)
                    .addComponent(BotaoBuscar)
                    .addComponent(BotaoRemover))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoImprimirEmOrd)
                    .addComponent(BotaoImprimirPre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoImprimirPos)
                    .addComponent(BotaoImprimirOrdInv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BotaoSair)
                .addContainerGap())
        );

        Operadores.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Operadores.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Operadores.setText("Operadores da Árvore Binária");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(PainelBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(42, 42, 42))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Operadores)
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Operadores)
                .addGap(18, 18, 18)
                .addComponent(PainelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotaoInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoInserirActionPerformed

        System.out.println("------------------------>> INÍCIO DAS INSERÇÕES <<------------------------\n");
        noArvore.inserir(new Elemento(10));
        noArvore.inserir(new Elemento(14));
        noArvore.inserir(new Elemento(8));
        noArvore.inserir(new Elemento(15));
        noArvore.inserir(new Elemento(12));
        noArvore.inserir(new Elemento(18));
        noArvore.inserir(new Elemento(20));
        noArvore.inserir(new Elemento(28));
        noArvore.inserir(new Elemento(3));
        noArvore.inserir(new Elemento(19));
        noArvore.inserir(new Elemento(13));
        noArvore.inserir(new Elemento(5));
        noArvore.inserir(new Elemento(7));
        noArvore.inserir(new Elemento(6));
        noArvore.inserir(new Elemento(1));
        System.out.println("------------------------>> Fim das inserções <<--------------------------");
    }//GEN-LAST:event_BotaoInserirActionPerformed

    private void BotaoImprimirPreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoImprimirPreActionPerformed
        System.out.print("\n** Impressão em Pré-Ordem:\n--> ");
        noArvore.imprimirPreOrdem();
    }//GEN-LAST:event_BotaoImprimirPreActionPerformed

    private void BotaoBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoBuscarActionPerformed

        System.out.println("\n----------------------->> Início das buscas <<-------------------------");
        System.out.println("--> O elemento  15 " + (noArvore.busca(15) ? "existe na árvore." : "não existe na árvore."));
        System.out.println("--> O elemento  19 " + (noArvore.busca(19) ? "existe na árvore." : "não existe na árvore."));
        System.out.println("--> O elemento  25 " + (noArvore.busca(25) ? "existe na árvore." : "não existe na árvore."));
        System.out.println("--> O elemento  7 " + (noArvore.busca(7) ? "existe na árvore." : "não existe na árvore."));
        System.out.println("--> O elemento  38 " + (noArvore.busca(38) ? "existe na árvore." : "não existe na árvore."));
        System.out.println("--> O elemento  10 " + (noArvore.busca(10) ? "existe na árvore." : "não existe na árvore."));
        System.out.println("\n-------------------------->> Fim das buscas - Antes de remover <<-------------------------");
    }//GEN-LAST:event_BotaoBuscarActionPerformed

    private void BotaoRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoRemoverActionPerformed
        System.out.println("\n\n--------------------------->> INÍCIO DAS REMOÇÕES <<--------------------------");
		System.out.println("--> --> --> Removendo...");
		elem.setValor(20);
		noArvore = noArvore.remover(elem);
				
		//1º Caso - Removendo um nó folha:
		elem.setValor(1);
		noArvore = noArvore.remover(elem);
		
		//2º Caso - Removendo um nó que tem filho somente à esquerda:
		elem.setValor(7);
		noArvore = noArvore.remover(elem);
		
		//3º Caso - Removendo um nó que tem filho somente à direita:
		elem.setValor(12);
		noArvore = noArvore.remover(elem);
		
		//4º Caso (passando para o 2º) - Removendo um nó que tem filho à esquerda e filho à direita:
		elem.setValor(10);
		noArvore = noArvore.remover(elem);
		
		//4º Caso (passando para o 1º) - Removendo um nó que tem filho à esquerda e filho à direita:
		elem.setValor(14);
		noArvore = noArvore.remover(elem);
		
		//Caso Excepcional - Removendo um nó que não existe na árvore, mas, se existisse estaria à esquerda de seu antecessor.
		elem.setValor(16);
		noArvore = noArvore.remover(elem);
		
		//Caso Excepcional 2 - Removendo um nó que não existe na árvore, mas, se existisse estaria à direita de seu antecessor.
		elem.setValor(29);
		noArvore = noArvore.remover(elem);
		
		System.out.println("\n----------------------------->> FIM DAS REMOÇÕES <<---------------------------");
    }//GEN-LAST:event_BotaoRemoverActionPerformed

    private void BotaoSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoSairActionPerformed
        System.out.println("\n\n   --> Fim do Programa! <--");
        System.exit(0);
    }//GEN-LAST:event_BotaoSairActionPerformed

    private void BotaoImprimirPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoImprimirPosActionPerformed
        System.out.print("\n\n** Impressão em Pós-Ordem:\n--> ");
        noArvore.imprimirPosOrdem();
    }//GEN-LAST:event_BotaoImprimirPosActionPerformed

    private void BotaoImprimirEmOrdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoImprimirEmOrdActionPerformed
        System.out.print("\n\n** Impressão Em Ordem:\n--> ");
        noArvore.imprimirEmOrdem();
    }//GEN-LAST:event_BotaoImprimirEmOrdActionPerformed

    private void BotaoImprimirOrdInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoImprimirOrdInvActionPerformed
        System.out.print("\n\n** Impressão em Ordem Inversa:\n--> ");
        noArvore.imprimirEmOrdemInversa();
    }//GEN-LAST:event_BotaoImprimirOrdInvActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Botoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Botoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Botoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Botoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Botoes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoBuscar;
    private javax.swing.JButton BotaoImprimirEmOrd;
    private javax.swing.JButton BotaoImprimirOrdInv;
    private javax.swing.JButton BotaoImprimirPos;
    private javax.swing.JButton BotaoImprimirPre;
    private javax.swing.JButton BotaoInserir;
    private javax.swing.JButton BotaoRemover;
    private javax.swing.JButton BotaoSair;
    private javax.swing.JLabel Operadores;
    private javax.swing.JPanel PainelBotoes;
    // End of variables declaration//GEN-END:variables
}
